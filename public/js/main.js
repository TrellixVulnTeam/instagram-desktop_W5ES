/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ (function() {

eval("\n// Likes \nconst postBlock = document.querySelector('.posts');\n\npostBlock.addEventListener('click', (event) => {\n    const target = event.target;\n    const isLikeClick = target.classList.contains('insta-liked') || target.classList.contains('insta-like');\n    if (isLikeClick){\n        const parent = target.parentNode;\n        if (parent.getAttribute('like') === 'true') {\n            parent.removeAttribute('like')\n            parent.innerHTML = '<i class=\"fa-solid fa-heart post-actions__item-icon insta-like\" style=\"color: #a4a4a4\"></i>'\n        } else {\n            parent.setAttribute('like', 'true')\n            parent.innerHTML = '<i class=\"fa-solid fa-heart post-actions__item-icon insta-liked\"></i>'\n        }\n    }\n\n\n\n})\n\n\n\n\n\n// Posts render\n{\nconst defaultPostData = {\n    img: 'http://placeimg.com/378/570/any?img=',\n    user: {\n        photo: 'https://i.pravatar.cc/240?img=',\n        nickName: '@anatoly_m'\n    }\n}\n\nfunction postGenerator (postCount = 1){\n    const posts = [];\n    let isGorizontal = false;\n\n    for (let i = 1; i <= postCount / 2; i++){\n\n        const postImg = defaultPostData.img+i;\n        const userPhoto = defaultPostData.user.photo+i;\n        const post = postHTMLGenerate(postImg, userPhoto, isGorizontal);\n      \n        const post2Img = defaultPostData.img+i+1;\n        const user2Photo = defaultPostData.user.photo+i+1;\n        const post2 = postHTMLGenerate(post2Img, user2Photo, !isGorizontal);\n     \n        const postColumn = document.createElement('div');\n        postColumn.appendChild(post)\n        postColumn.appendChild(post2)\n\n        posts.push(postColumn)\n\n        isGorizontal = !isGorizontal;\n    }\n    return posts\n}\n\nfunction postHTMLGenerate(postImg, userPhoto, isGorizontal){\n    const post = document.createElement('div');\n    post.className = isGorizontal ? 'post post-gorizontal' : 'post';\n    post.innerHTML = `\n    <div class=\"post-pic\"> \n    <img class=\"post-pic__item\" src=\"${postImg}\" alt=\"\">\n</div>\n    <div class=\"post-footer\">\n        <div class=\"post-user\">\n            <div class=\"user user--row\">\n                <div>\n                    <img src=\"${userPhoto}\" alt=\"\" class=\"user-avatar\">\n                </div>\n                <div class=\"user-nickname\">@anatoly_m</div>\n            </div>\n        </div>\n        <div class=\"post-container\">\n            <div class=\"post-actions\">\n                <div class=\"post-actions__item\">\n                    <i class=\"fa-solid fa-heart post-actions__item-icon insta-like\"></i>\n                </div>\n                <div class=\"post-actions__item\">\n                    <i class=\"fa-solid fa-comment post-actions__item-icon\"></i>\n                </div>\n                <div class=\"post-actions__item\">\n                    <i class=\"fa-solid fa-paper-plane post-actions__item-icon\"></i>\n                </div>\n            </div>\n        </div>\n    </div>\n    `\n\n    return post;\n}\n\nconst postsGenerated = postGenerator(11);\n\nconst postsBlock = document.querySelector('.posts');\npostsBlock.innerHTML = '';\n\npostsGenerated.forEach((post) => {\n    postsBlock.appendChild(post)\n})\n\n// Modal window \nconst createBtn = document.querySelector('.new-post__button');\nconst modal = document.querySelector('.modal');\nconst modalElement = {\n    text: modal.querySelector('.modal-text'),\n    img: modal.querySelector('#image-link'),\n    hashteg: modal.querySelector('#hashtag'),\n    saveBtn: modal.querySelector('#save-post')\n}\n\ncreateBtn.addEventListener('click', () => {\n    if (modal.classList.contains('modal--hidden')){\n        modal.classList.remove('modal--hidden');\n    }\n})\n\nmodal.addEventListener('click', (event) => {\n    if (event.target.classList.contains('modal')) {\n        closeAndClearModal();\n    }\n})\n\nfunction closeAndClearModal() {\n    modal.classList.add('modal--hidden')\n    modalElement.text.value = '';\n    modalElement.img.value = '';\n    modalElement.hashteg.value = '';\n}\n\n\n// add post \nmodalElement.saveBtn.addEventListener('click', ()=> {\n    if (isHaveErrors()) return\n    buildNewPostHTML(modalElement.img.value);\n    closeAndClearModal();\n})\n\nfunction isHaveErrors(){\n    let isError = false;\n    modalElement.text.classList.remove('modal-arror');\n    modalElement.img.classList.remove('modal-error');\n\n    if (!modalElement.text.value) {\n        modalElement.text.classList.add('modal-error');\n        isError = true;\n    }\n\n    if (!modalElement.img.value) {\n        modalElement.img.classList.add('modal-error')\n        isError = true;\n    }\n\n    return isError;\n}\n\n// function render html code new post \nfunction buildNewPostHTML(postPhotoURL) {\n    const postsBlock = document.querySelector('.posts');\n    const lastColumn = document.querySelector('.posts > div:last-child');\n    const lastColumnPosts = lastColumn.querySelectorAll('.post');\n    const lastPostIndex = lastColumnPosts.length - 1;\n    const isGorizontalLastPost = lastColumnPosts[lastPostIndex].classList.contains('post-gorizontal');\n    const isGorizontalNewPostType = lastColumnPosts.length < 2 ? !isGorizontalLastPost : isGorizontalLastPost;\n    const postHTML = postHTMLGenerate(postPhotoURL, 'https://i.pravatar.cc/240', isGorizontalNewPostType);\n    \n    console.log(lastColumnPosts);\n    \n    if (lastColumnPosts.length > 1) {\n        const newColumn = document.createElement('div');\n        newColumn.appendChild(postHTML);\n\n        postsBlock.appendChild(newColumn);\n    } else {\n        lastColumn.appendChild(postHTML);\n    }\n}\n}\n\n\n\n\n\n\n\n//# sourceURL=webpack://project/./src/js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/main.js"]();
/******/ 	
/******/ })()
;